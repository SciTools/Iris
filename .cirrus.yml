# Reference:
#   - https://cirrus-ci.org/guide/writing-tasks/
#   - https://cirrus-ci.org/guide/writing-tasks/#environment-variables
#   - https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks
#   - https://cirrus-ci.org/guide/linux/
#   - https://hub.docker.com/_/gcc/
#   - https://hub.docker.com/_/python/

#
# Global defaults.
#
container:
  image: gcc:latest
  cpu: 2
  memory: 4G


env:
  # Skip specific tasks by name. Set to a non-empty string to skip.
  SKIP_LINT_TASK: "X"
  SKIP_TEST_TASK: "X"
  SKIP_DOCTEST_TASK: "X"
  SKIP_LINKCHECK_TASK: "X"
  # Skip task groups by type. Set to a non-empty string to skip.
  SKIP_ALL_DOC_TASKS: "X"
  # Maximum cache period (in weeks) before forcing a new cache upload.
  CACHE_PERIOD: "2"
  # Increment the build number to force new cartopy cache upload.
  CARTOPY_CACHE_BUILD: "3"
  # Increment the build number to force new conda cache upload.
  CONDA_CACHE_BUILD: "0"
  # Increment the build number to force new nox cache upload.
  NOX_CACHE_BUILD: "0"
  # Increment the build number to force new pip cache upload.
  PIP_CACHE_BUILD: "0"
  # Pip packages to be upgraded/installed.
  PIP_CACHE_PACKAGES: "nox pip pyyaml setuptools wheel"
  # Conda packages to be installed.
  CONDA_CACHE_PACKAGES: "nox pip"
  # Git commit hash for iris test data.
  IRIS_TEST_DATA_VERSION: "2.4"
  # Base directory for the iris-test-data.
  IRIS_TEST_DATA_DIR: ${HOME}/iris-test-data
 


#
# YAML alias for common linux test infra-structure.
#
linux_task_template: &LINUX_TASK_TEMPLATE
  auto_cancellation: true
  env:
    PATH: ${HOME}/miniconda/bin:${PATH}
    SITE_CFG: ${CIRRUS_WORKING_DIR}/lib/iris/etc/site.cfg
  conda_cache:
    folder: ${HOME}/miniconda
    fingerprint_script:
      - wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      - echo "${CIRRUS_OS} $(sha256sum miniconda.sh)"
      - echo "${CONDA_CACHE_PACKAGES}"
      - echo "$(date +%Y).$(expr $(date +%U) / ${CACHE_PERIOD}):${CONDA_CACHE_BUILD}"
      - uname -r
    populate_script:
      - export CONDA_OVERRIDE_LINUX="$(uname -r | cut -d'+' -f1)"
      - bash miniconda.sh -b -p ${HOME}/miniconda
      - conda config --set always_yes yes --set changeps1 no
      - conda config --set show_channel_urls True
      - conda config --add channels conda-forge
      - conda update --quiet --name base conda
      - conda install --quiet --name base ${CONDA_CACHE_PACKAGES}
  cartopy_cache:
    folder: ${HOME}/.local/share/cartopy
    fingerprint_script:
      - echo "${CIRRUS_OS}"
      - echo "$(date +%Y).$(expr $(date +%U) / ${CACHE_PERIOD}):${CARTOPY_CACHE_BUILD}"
    populate_script:
      - conda create --quiet --name cartopy-cache cartopy
      - source ${HOME}/miniconda/etc/profile.d/conda.sh >/dev/null 2>&1
      - conda activate cartopy-cache >/dev/null 2>&1
      - cd $(mktemp -d)
      - wget --quiet https://raw.githubusercontent.com/SciTools/cartopy/v0.20.0/tools/cartopy_feature_download.py
      - python cartopy_feature_download.py physical --output ${HOME}/.local/share/cartopy --no-warn
      - conda deactivate >/dev/null 2>&1
  nox_cache:
    folder: ${CIRRUS_WORKING_DIR}/.nox
    reupload_on_changes: true
    fingerprint_script:
      - echo "${CIRRUS_TASK_NAME}"
      - echo "${NOX_CACHE_BUILD}"


#
# YAML alias for common windows test infra-structure.
#
windows_task_template: &WINDOWS_TASK_TEMPLATE
  auto_cancellation: true
  env:
    SITE_CFG: ${CIRRUS_WORKING_DIR}/lib/iris/etc/site.cfg
    CONDA_DIR: 'C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\miniconda3'
    # PATH: '%CONDA_DIR%\condabin;%CONDA_DIR%;%CONDA_DIR%\scripts;${PATH}'
    PATH: '%CONDA_DIR%\.local\share\cartopy;${CONDA_DIR}\bin;${CONDA_DIR}\Library\bin;${CONDA_DIR}\condabin;${CONDA_DIR};${CONDA_DIR}\scripts;${PATH}'
    INCLUDE: '${CONDA_DIR}\Library\include'
    LIB: '${CONDA_DIR}\Library\lib'
    HOME: ${UserProfile} # Because nox looks for this
    # Base directory for the iris-test-data (Windows path).
    IRIS_TEST_DATA_DIR_WIN_FWD: ${CIRRUS_WORKING_DIR}/iris-test-data
    IRIS_TEST_DATA_DIR_WIN_BWD: C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\iris-test-data
  conda_cache:
    folder: ${CONDA_DIR}
    fingerprint_script:
      - echo %CIRRUS_OS%
      - echo %CONDA_CACHE_PACKAGES%
      # TODO: We've started refreshing every day rather than every fortnight here
      - echo %date%:%CONDA_CACHE_BUILD%
      - choco info miniconda
      # TODO: We can SHA256 hash like this if that's useful
      # - CertUtil -hashfile temp.txt SHA256 | findstr /v "hash" > tmp.txt
    populate_script:
      - mkdir miniconda3
      - ps: Invoke-WebRequest -OutFile Miniconda3-latest-Windows-x86_64.exe -Uri https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
      # Check sha256?
      - Miniconda3-latest-Windows-x86_64.exe /InstallationType=JustMe /AddToPath=1 /S /D=C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\miniconda3
      - conda config --set always_yes yes --set changeps1 no
      - conda config --set show_channel_urls True
      - conda config --add channels conda-forge
      - conda update --quiet --name base conda
      - conda install --quiet --name base %CONDA_CACHE_PACKAGES%
      - conda update -c defaults python # New suggestion from conda to try to fix c libs
      - set CONDA_DLL_SEARCH_MODIFICATION_ENABLE=1 # And the search flag that should help
  cartopy_cache:
    folder: ${UserProfile}/.local/share/cartopy
    fingerprint_script:
      - echo %CIRRUS_OS%
      # TODO: We've started refreshing every day rather than every fortnight here
      - echo %date%:%CARTOPY_CACHE_BUILD%
    populate_script:
      - conda create --quiet --name cartopy-cache cartopy
      - conda init cmd.exe
      - conda activate cartopy-cache > nul 2>&1
      # TODO: This used to use mktemp. This is less random
      - set nat_earth_dest=%UserProfile%\.local\share\cartopy
      - echo nat_earth_dest
      - mkdir %nat_earth_dest%\tmp
      - set cartopy_dl_script=%nat_earth_dest%\tmp\cfd.py
      - ps: Invoke-WebRequest -OutFile $Env:cartopy_dl_script -Uri https://raw.githubusercontent.com/SciTools/cartopy/v0.20.0/tools/cartopy_feature_download.py
      - ps: python $Env:cartopy_dl_script physical --output $Env:nat_earth_dest --no-warn
      - conda deactivate > nul 2>&1
  nox_cache:
    folder: ${CIRRUS_WORKING_DIR}/.nox
    reupload_on_changes: true
    fingerprint_script:
      - echo %CIRRUS_TASK_NAME%
      - echo %NOX_CACHE_BUILD%


#
# YAML alias for compute credits.
#
compute_credits_template: &CREDITS_TEMPLATE
  # Restrict where compute credits are used.
  use_compute_credits: ${CIRRUS_REPO_FULL_NAME} == "SciTools/iris" && ${CIRRUS_USER_COLLABORATOR} == "true" && ${CIRRUS_PR_DRAFT} == "false" && ${CIRRUS_PR} != ""


#
# YAML alias for the iris-test-data cache.
#
iris_test_data_template: &IRIS_TEST_DATA_TEMPLATE
  data_cache:
    folder: ${IRIS_TEST_DATA_DIR}
    fingerprint_script:
      - echo "iris-test-data v${IRIS_TEST_DATA_VERSION}"
    populate_script:
      - wget --quiet https://github.com/SciTools/iris-test-data/archive/v${IRIS_TEST_DATA_VERSION}.zip -O iris-test-data.zip
      - unzip -q iris-test-data.zip
      - mv iris-test-data-${IRIS_TEST_DATA_VERSION} ${IRIS_TEST_DATA_DIR}


#
# YAML alias for the iris-test-data cache.
#
win_iris_test_data_template: &WIN_IRIS_TEST_DATA_TEMPLATE
  data_cache:
    folder: ${IRIS_TEST_DATA_DIR_WIN_FWD}
    fingerprint_script:
      - echo win_iris-test-data v%IRIS_TEST_DATA_VERSION%
    populate_script:
      - set ziploc=%IRIS_TEST_DATA_DIR_WIN_FWD%
      - set zipfile=%IRIS_TEST_DATA_DIR_WIN_FWD%/win_iris-test-data.zip
      - set url=https://github.com/SciTools/iris-test-data/archive/v%IRIS_TEST_DATA_VERSION%.zip
      - ps: mkdir $Env:ziploc
      - ps: Invoke-WebRequest -OutFile $Env:zipfile -Uri $Env:url
      - ps: Expand-Archive -Path $Env:zipfile -DestinationPath $Env:ziploc


#
# Linting
#
task:
  only_if: ${SKIP_LINT_TASK} == ""
  << : *CREDITS_TEMPLATE
  auto_cancellation: true
  container:
    image: python:3.8
    cpu: 2
    memory: 4G
  name: "${CIRRUS_OS}: pre-commit hooks"
  pip_cache:
    folder: ~/.cache/pip
    fingerprint_script:
      - echo "${CIRRUS_TASK_NAME} py${PYTHON_VERSION}"
      - echo "$(date +%Y).$(expr $(date +%U) / ${CACHE_PERIOD}):${PIP_CACHE_BUILD} ${PIP_CACHE_PACKAGES}"
  precommit_script:
    - pip list
    - python -m pip install --retries 3 --upgrade ${PIP_CACHE_PACKAGES}
    - pip list
    - nox --session precommit


#
# Testing (Linux)
#
task:
  only_if: ${SKIP_TEST_TASK} == ""
  << : *CREDITS_TEMPLATE
  matrix:
    env:
      PY_VER: 3.7
    # env:
    #   PY_VER: 3.8
  name: "${CIRRUS_OS}: py${PY_VER} tests"
  container:
    image: gcc:latest
    cpu: 6
    memory: 8G
  << : *IRIS_TEST_DATA_TEMPLATE
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - export CONDA_OVERRIDE_LINUX="$(uname -r | cut -d'+' -f1)"
    - echo "[Resources]" > ${SITE_CFG}
    - echo "test_data_dir = ${IRIS_TEST_DATA_DIR}/test_data" >> ${SITE_CFG}
    - echo "doc_dir = ${CIRRUS_WORKING_DIR}/docs" >> ${SITE_CFG}
    - nox --session tests -- --verbose


#
# Testing (Windows)
#
task:
  # only_if: ${SKIP_TEST_TASK} == ""
  << : *CREDITS_TEMPLATE
  matrix:
    env:
      PY_VER: 3.7
    # env:
    #   PY_VER: 3.8
  name: "${CIRRUS_OS}: py${PY_VER} tests"
  windows_container:
    image: cirrusci/windowsservercore:2019
    cpu: 6
    memory: 8G
  << : *WIN_IRIS_TEST_DATA_TEMPLATE
  << : *WINDOWS_TASK_TEMPLATE
  tests_script:
    # - conda activate base
    - echo [Resources] > %SITE_CFG%
    - echo test_data_dir = %IRIS_TEST_DATA_DIR_WIN_BWD%\test_data >> %SITE_CFG%
    - echo doc_dir = C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build\docs >> %SITE_CFG%
    - ps: cat $Env:SITE_CFG
    - echo %PATH%
    - echo %INCLUDE%
    - echo %LIB%
    - dir %CONDA_DIR%
    - dir %CONDA_DIR%\Library
    - dir %CONDA_DIR%\Library\include
    - dir %CONDA_DIR%\Library\lib
    - nox --session tests -- --verbose


#
# Documentation Testing and Gallery (Linux)
#
task:
  only_if: ${SKIP_DOCTEST_TASK} == "" && ${SKIP_ALL_DOC_TASKS} == ""
  << : *CREDITS_TEMPLATE
  env:
    PY_VER: 3.8
    MPL_RC_DIR: ${HOME}/.config/matplotlib
    MPL_RC_FILE: ${HOME}/.config/matplotlib/matplotlibrc
  name: "${CIRRUS_OS}: py${PY_VER} doctests and gallery"
  << : *IRIS_TEST_DATA_TEMPLATE
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - export CONDA_OVERRIDE_LINUX="$(uname -r | cut -d'+' -f1)"
    - echo "[Resources]" > ${SITE_CFG}
    - echo "test_data_dir = ${IRIS_TEST_DATA_DIR}/test_data" >> ${SITE_CFG}
    - echo "doc_dir = ${CIRRUS_WORKING_DIR}/docs" >> ${SITE_CFG}
    - mkdir -p ${MPL_RC_DIR}
    - echo "backend : agg" > ${MPL_RC_FILE}
    - echo "image.cmap : viridis" >> ${MPL_RC_FILE}
    - nox --session doctest -- --verbose


#
# Documentation Link Check (Linux)
#
task:
  only_if: ${SKIP_LINKCHECK_TASK} == "" && ${SKIP_ALL_DOC_TASKS} == ""
  << : *CREDITS_TEMPLATE
  env:
    PY_VER: 3.8
    MPL_RC_DIR: ${HOME}/.config/matplotlib
    MPL_RC_FILE: ${HOME}/.config/matplotlib/matplotlibrc
  name: "${CIRRUS_OS}: py${PY_VER} link check"
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - export CONDA_OVERRIDE_LINUX="$(uname -r | cut -d'+' -f1)"
    - mkdir -p ${MPL_RC_DIR}
    - echo "backend : agg" > ${MPL_RC_FILE}
    - echo "image.cmap : viridis" >> ${MPL_RC_FILE}
    - nox --session linkcheck -- --verbose
