# Reference:
#   - https://cirrus-ci.org/guide/writing-tasks/
#   - https://cirrus-ci.org/guide/writing-tasks/#environment-variables
#   - https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks
#   - https://cirrus-ci.org/guide/linux/
#   - https://cirrus-ci.org/guide/macOS/
#   - https://cirrus-ci.org/guide/windows/
#   - https://hub.docker.com/_/gcc/
#   - https://hub.docker.com/_/python/

#
# Global defaults.
#
container:
  image: python:3.8
  cpu: 2
  memory: 4G


env:
  # Skip specific tasks by name. Set to a non-empty string to skip.
  SKIP_LINT_TASK: "x"
  SKIP_TEST_MINIMAL_TASK: ""
  SKIP_TEST_FULL_TASK: "x"
  SKIP_GALLERY_TASK: "x"
  SKIP_DOCTEST_TASK: "x"
  SKIP_LINKCHECK_TASK: "x"
  # Skip task groups by type. Set to a non-empty string to skip.
  SKIP_ALL_TEST_TASKS: ""
  SKIP_ALL_DOC_TASKS: ""
  # Maximum cache period (in weeks) before forcing a new cache upload.
  CACHE_PERIOD: "2"
  # Increment the build number to force new cartopy cache upload.
  CARTOPY_CACHE_BUILD: "0"
  # Git commit hash for iris test data.
  IRIS_TEST_DATA_REF: "fffb9b14b9cb472c5eb2ebb7fd19acb7f6414a30"
  # Base directory for the iris-test-data.
  IRIS_TEST_DATA_DIR: ${HOME}/iris-test-data


#
# YAML alias for common linux test infra-structure
#
linux_task_template: &LINUX_TASK_TEMPLATE
  auto_cancellation: true
  env:
    SITE_CFG: ${CIRRUS_WORKING_DIR}/lib/iris/etc/site.cfg
  cartopy_cache:
    folder: ${HOME}/.local/share/cartopy
    fingerprint_script:
      - echo "${CIRRUS_OS}"
      - echo "$(date +%Y).$(expr $(date +%U) / ${CACHE_PERIOD}):${CARTOPY_CACHE_BUILD}"


#
# YAML alias for common docker build infra-structure
#
docker_template: &DOCKER_TEMPLATE
  env:
    DOCKER_USERNAME: "ENCRYPTED\
                      [a5ba7e105e04f79ce57c408f280d92c8c9c094ca0b1723d2\
                      3850f8282be48041c0012a8e2efaa6e2f11a297c3bdc0b4a]"
    DOCKER_PASSWORD: "ENCRYPTED\
                      [549d20937f4c8862bea2e48312f8a68635474bf5593c959b\
                      25ae7b6c86dbdcdb4e54045b9e2a3876fc5dde0cc251ad0a]"
  build_script:
    - docker image pull bjlittle/cirrus-ci-py${PY_VER}:latest || true
    - docker build --cache-from bjlittle/cirrus-ci-py${PY_VER}:latest --build-arg PY_VER=${PY_VER} --tag bjlittle/cirrus-ci-py${PY_VER} requirements/ci/nox.lock/.
    - docker tag bjlittle/cirrus-ci-py${PY_VER} bjlittle/cirrus-ci-py${PY_VER}:${CIRRUS_BUILD_ID}
    - echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
    - docker push bjlittle/cirrus-ci-py${PY_VER}


#
# YAML alias for compute credits
#
compute_credits_template: &CREDITS_TEMPLATE
  # Only use credits for non-DRAFT pull-requests to SciTools/iris master branch by collaborators
  use_compute_credits: $CIRRUS_REPO_FULL_NAME == 'SciTools/iris' && $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_PR_DRAFT == 'false' && $CIRRUS_BASE_BRANCH == 'master' && $CIRRUS_PR != ''


#
# Docker
#
docker_builder:
  alias: builder-py36
  env:
    PY_VER: 36
  name: "${CIRRUS_OS}: py${PY_VER} docker builder"
  << : *DOCKER_TEMPLATE


docker_builder:
  alias: builder-py37
  env:
    PY_VER: 37
  name: "${CIRRUS_OS}: py${PY_VER} docker builder"
  << : *DOCKER_TEMPLATE


docker_builder:
  alias: builder-py38
  env:
    PY_VER: 38
  name: "${CIRRUS_OS}: py${PY_VER} docker builder"
  << : *DOCKER_TEMPLATE


#
# Linting
#
lint_task:
  name: "${CIRRUS_OS}: flake8 and black"
  only_if: $SKIP_LINT_TASK == ""
  depends_on:
    - builder-py38
  auto_cancellation: true
  << : *CREDITS_TEMPLATE
  lint_script:
    - nox --session flake8
    - nox --session black


#
# Testing Minimal (Linux)
#
test_minimal_task:
  only_if: $SKIP_TEST_MINIMAL_TASK == "" && $SKIP_ALL_TEST_TASKS == ""
  << : *CREDITS_TEMPLATE
  matrix:
    - depends_on:
        builder-py36
      env:
        PY_VER: 3.6
      container:
        image: bjlittle/cirrus-ci-py36:latest
        cpu: 2
        memory: 4G
    - depends_on:
        builder-py37
      env:
        PY_VER: 3.7
      container:
        image: bjlittle/cirrus-ci-py37:latest
        cpu: 2
        memory: 4G
    - depends_on:
        builder-py38
      env:
        PY_VER: 3.8
      container:
        image: bjlittle/cirrus-ci-py38:latest
        cpu: 2
        memory: 4G
  name: "${CIRRUS_OS}: py${PY_VER} tests (minimal)"
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - echo "PWD = <${PWD}>" >&2
    - ls -l >&2
    - echo "[Resources]" > ${SITE_CFG}
    - echo "doc_dir = ${CIRRUS_WORKING_DIR}/docs/iris" >> ${SITE_CFG}
    - nox --session tests


#
# Testing Full (Linux)
#
test_full_task:
  only_if: $SKIP_TEST_FULL_TASK == "" && $SKIP_ALL_TEST_TASKS == ""
  << : *CREDITS_TEMPLATE
  matrix:
    - depends_on:
        builder-py36
      env:
        PY_VER: 3.6
      container:
        image: bjlittle/cirrus-ci-py36:latest
        cpu: 6
        memory: 8G
    - depends_on:
        builder-py37
      env:
        PY_VER: 3.7
      container:
        image: bjlittle/cirrus-ci-py37:latest
    - depends_on:
        builder-py38
      env:
        PY_VER: 3.8
      container:
        image: bjlittle/cirrus-ci-py38:latest
        cpu: 6
        memory: 8G
  name: "${CIRRUS_OS}: py${PY_VER} tests (full)"
  data_cache:
    folder: ${IRIS_TEST_DATA_DIR}
    fingerprint_script:
      - echo "${IRIS_TEST_DATA_REF}"
    populate_script:
      - wget --quiet https://github.com/SciTools/iris-test-data/archive/${IRIS_TEST_DATA_REF}.zip -O iris-test-data.zip
      - unzip -q iris-test-data.zip
      - mv iris-test-data-$(echo "${IRIS_TEST_DATA_REF}" | sed "s/^v//") ${IRIS_TEST_DATA_DIR}
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - echo "[Resources]" > ${SITE_CFG}
    - echo "test_data_dir = ${IRIS_TEST_DATA_DIR}/test_data" >> ${SITE_CFG}
    - echo "doc_dir = ${CIRRUS_WORKING_DIR}/docs/iris" >> ${SITE_CFG}
    - nox --session tests


#
# Testing Documentation Gallery (Linux)
#
gallery_task:
  only_if: $SKIP_GALLERY_TASK == "" && $SKIP_ALL_DOC_TASKS == ""
  depends_on:
    - builder-py38
  << : *CREDITS_TEMPLATE
  env:
    PY_VER: 3.8
  name: "${CIRRUS_OS}: py${PY_VER} doc tests (gallery)"
  data_cache:
    folder: ${IRIS_TEST_DATA_DIR}
    fingerprint_script:
      - echo "${IRIS_TEST_DATA_REF}"
    populate_script:
      - wget --quiet https://github.com/SciTools/iris-test-data/archive/${IRIS_TEST_DATA_REF}.zip -O iris-test-data.zip
      - unzip -q iris-test-data.zip
      - mv iris-test-data-$(echo "${IRIS_TEST_DATA_REF}" | sed "s/^v//") ${IRIS_TEST_DATA_DIR}
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - echo "[Resources]" > ${SITE_CFG}
    - echo "test_data_dir = ${IRIS_TEST_DATA_DIR}/test_data" >> ${SITE_CFG}
    - echo "doc_dir = ${CIRRUS_WORKING_DIR}/docs/iris" >> ${SITE_CFG}
    - nox --session gallery


#
# Testing Documentation (Linux)
#
doctest_task:
  only_if: $SKIP_DOCTEST_TASK == "" && $SKIP_ALL_DOC_TASKS == ""
  depends_on:
    - builder-py38
  << : *CREDITS_TEMPLATE
  env:
    PY_VER: 3.8
    MPL_RC_DIR: ${HOME}/.config/matplotlib
    MPL_RC_FILE: ${HOME}/.config/matplotlib/matplotlibrc
  name: "${CIRRUS_OS}: py${PY_VER} doc tests"
  data_cache:
    folder: ${IRIS_TEST_DATA_DIR}
    fingerprint_script:
      - echo "${IRIS_TEST_DATA_REF}"
    populate_script:
      - wget --quiet https://github.com/SciTools/iris-test-data/archive/${IRIS_TEST_DATA_REF}.zip -O iris-test-data.zip
      - unzip -q iris-test-data.zip
      - mv iris-test-data-$(echo "${IRIS_TEST_DATA_REF}" | sed "s/^v//") ${IRIS_TEST_DATA_DIR}
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - echo "[Resources]" > ${SITE_CFG}
    - echo "test_data_dir = ${IRIS_TEST_DATA_DIR}/test_data" >> ${SITE_CFG}
    - echo "doc_dir = ${CIRRUS_WORKING_DIR}/docs/iris" >> ${SITE_CFG}
    - mkdir -p ${MPL_RC_DIR}
    - echo "backend : agg" > ${MPL_RC_FILE}
    - echo "image.cmap : viridis" >> ${MPL_RC_FILE}
    - nox --session doctest


#
# Testing Documentation Link Check (Linux)
#
linkcheck_task:
  only_if: $SKIP_LINKCHECK_TASK == "" && $SKIP_ALL_DOC_TASKS == ""
  depends_on:
    - builder-py38
  << : *CREDITS_TEMPLATE
  env:
    PY_VER: 3.8
    MPL_RC_DIR: ${HOME}/.config/matplotlib
    MPL_RC_FILE: ${HOME}/.config/matplotlib/matplotlibrc
  name: "${CIRRUS_OS}: py${PY_VER} doc link check"
  << : *LINUX_TASK_TEMPLATE
  tests_script:
    - mkdir -p ${MPL_RC_DIR}
    - echo "backend : agg" > ${MPL_RC_FILE}
    - echo "image.cmap : viridis" >> ${MPL_RC_FILE}
    - nox --session linkcheck
