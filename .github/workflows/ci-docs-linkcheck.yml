# reference:
#   - https://github.com/actions/cache
#   - https://github.com/actions/checkout
#   - https://github.com/marketplace/actions/setup-miniconda

name: ci-docs-linkcheck

on:
  push:
    branches:
      - "*" 

  pull_request:
    branches:
      - "*" 

jobs:
  tests:
    name: ${{ matrix.os }} ${{ matrix.python-version }}

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8"]
        include:
          - os: ubuntu-latest
            lock-file: requirements/ci/nox.lock/py38-linux-64.lock

    env:
      ENV_NAME: "iris-ci"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Conda package cache"
        uses: actions/cache@v2
        env:
          # Increment the build number to force a cache refresh.
          CACHE_BUILD: 0
          LOCK_FILE: ${{ matrix.lock-file }}
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-py${{ matrix.python-version }}-b${{ env.CACHE_BUILD }}-${{ hashFiles(env.LOCK_FILE) }}

      - name: "Conda install"
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: ${{ env.ENV_NAME }}
          auto-update-conda: false
          use-only-tar-bz2: true

      - name: "Conda environment cache"
        uses: actions/cache@v2
        id: conda-env-cache
        env:
          # Increment the build number to force a cache refresh.
          CACHE_BUILD: 0
          LOCK_FILE: ${{ matrix.lock-file }}
        with:
          path: ${{ env.CONDA }}/envs/${{ env.ENV_NAME }}
          key: ${{ runner.os }}-conda-env-${{ env.ENV_NAME }}-py${{ matrix.python-version }}-b${{ env.CACHE_BUILD }}-${{ hashFiles(env.LOCK_FILE) }}

      - name: "Conda environment update"
        if: steps.conda-env-cache.outputs.cache-hit != 'true'
        run: |
          mamba install --name ${{ env.ENV_NAME }} --file ${{ matrix.lock-file }}

      - name: "Conda info"
        run: |
          conda info
          conda list

      - name: "Iris install"
        run: |
          python -m pip install --no-deps -e .

      - name: "Iris import"
        run: |
          python -c "import iris; print(f'Iris v{iris.__version__}')"

      - name: "Iris linkcheck"
        run: |
          cd docs
          make clean
          make linkcheck 
