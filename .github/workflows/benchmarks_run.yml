# Use ASV to check for performance regressions, either:
#  - In the last 24 hours' commits.
#  - Introduced by this pull request.

name: benchmarks-run
run-name: Run benchmarks

on:
  schedule:
    # Runs every day at 23:00.
    - cron: "0 23 * * *"
  workflow_dispatch:
    inputs:
      first_commit:
        description: "First commit to benchmark (see bm_runner.py > Overnight)."
        required: false
        type: string
  pull_request:
    # Add the `labeled` type to the default list.
    types: [labeled, opened, synchronize, reopened]

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    if: github.repository == 'SciTools/iris'
    outputs:
      overnight: ${{ steps.overnight.outputs.overnight }}
      branch: ${{ steps.branch.outputs.branch }}
      continue: ${{ steps.check-continue.outputs.continue }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: locks-changed
        uses: marceloprado/has-changed-path@df1b7a3161b8fb9fd8c90403c66a9e66dfde50cb
        with:
          paths: requirements/locks/*.lock
      - id: overnight
        if: github.event_name != 'pull_request'
        run: echo "overnight=true" >> "$GITHUB_OUTPUT"
      - id: branch
        if: >
          github.event_name == 'pull_request'
          &&
          (
            steps.locks-changed.outputs.changed == 'true'
            ||
            github.event.label.name == 'benchmark_this'
          )
        run: echo "branch=true" >> "$GITHUB_OUTPUT"
      - id: check-continue
        if: >
          steps.overnight.outputs.overnight == 'true'
          ||
          steps.branch.outputs.branch == 'true'
        run: echo "continue=true" >> "$GITHUB_OUTPUT"
        
  
  benchmark:
    runs-on: ubuntu-latest
    needs: pre-checks
    if: needs.pre-checks.outputs.continue == 'true'

    env:
      IRIS_TEST_DATA_LOC_PATH: benchmarks
      IRIS_TEST_DATA_PATH: benchmarks/iris-test-data
      IRIS_TEST_DATA_VERSION: "2.22"
      # Lets us manually bump the cache to rebuild
      ENV_CACHE_BUILD: "0"
      TEST_DATA_CACHE_BUILD: "2"

    steps:
      - name: Benchmark this pull request
        if: needs.pre-checks.outputs.branch == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo "Running benchmarks in branch mode."

      - name: Run overnight benchmarks
        id: overnight
        if: needs.pre-checks.outputs.overnight == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          first_commit=${{ inputs.first_commit }}
          if [ "$first_commit" == "" ]
          then
            first_commit=$(git log --after="$(date -d "1 day ago" +"%Y-%m-%d") 23:00:00" --pretty=format:"%h" | tail -n 1)
          fi
          
          if [ "$first_commit" != "" ]
          then
            echo "first commit = ${first_commit}"
            echo "Running benchmarks in overnight mode."
          fi
