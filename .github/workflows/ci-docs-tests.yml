# reference:
#   - https://github.com/actions/cache
#   - https://github.com/actions/checkout
#   - https://github.com/marketplace/actions/setup-miniconda

name: ci-docs-tests

on:
  push:
    branches:
      - "*" 

  pull_request:
    branches:
      - "*" 

jobs:
  tests:
    name: "doctests ${{ matrix.os }} ${{ matrix.python-version }}"

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8"]

    env:
      IRIS_TEST_DATA_VERSION: "2.9"
      ENV_NAME: "ci-docs-tests"

    steps:
      - name: "checkout"
        uses: actions/checkout@v3

      - name: "environment configure"
        env:
          # Maximum cache period (in weeks) before forcing a cache refresh.
          CACHE_WEEKS: 2
        run: |
          echo "CACHE_PERIOD=$(date +%Y).$(expr $(date +%U) / ${CACHE_WEEKS})" >> ${GITHUB_ENV}
          echo "LOCK_FILE=requirements/ci/nox.lock/py$(echo ${{ matrix.python-version }} | tr -d '.')-linux-64.lock" >> ${GITHUB_ENV}

      - name: "data cache"
        uses: actions/cache@v3
        id: data-cache
        env:
          # Increment the build number to force a cache refresh.
          CACHE_BUILD: 0
        with:
          path: ~/iris-test-data
          key: ${{ runner.os }}-iris-test-data-${{ env.ENV_NAME }}-v${{ env.IRIS_TEST_DATA_VERSION }}-b${{ env.CACHE_BUILD }}

      - name: "data cache populate"
        if: steps.data-cache.outputs.cache-hit != 'true'
        run: |
          wget --quiet https://github.com/SciTools/iris-test-data/archive/v${{ env.IRIS_TEST_DATA_VERSION }}.zip -O iris-test-data.zip
          unzip -q iris-test-data.zip
          mv iris-test-data-${{ env.IRIS_TEST_DATA_VERSION }} ${HOME}/iris-test-data

      - name: "conda package cache"
        uses: actions/cache@v3
        env:
          # Increment the build number to force a cache refresh.
          CACHE_BUILD: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-pkgs-${{ env.ENV_NAME }}-p${{ env.CACHE_PERIOD }}-b${{ env.CACHE_BUILD }}

      - name: "conda install"
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          channels: conda-forge,defaults
          activate-environment: ${{ env.ENV_NAME }}
          auto-update-conda: false
          use-only-tar-bz2: true

      - name: "conda environment cache"
        uses: actions/cache@v3
        id: conda-env-cache
        env:
          # Increment the build number to force a cache refresh.
          CACHE_BUILD: 0
        with:
          path: ${{ env.CONDA }}/envs/${{ env.ENV_NAME }}
          key: ${{ runner.os }}-conda-env-${{ env.ENV_NAME }}-p${{ env.CACHE_PERIOD }}-b${{ env.CACHE_BUILD }}

      - name: "conda environment update"
        if: steps.conda-env-cache.outputs.cache-hit != 'true'
        run: |
          conda install --quiet --name ${{ env.ENV_NAME }} cartopy nox pip

      - name: "conda info"
        run: |
          conda info
          conda list

      - name: "cartopy cache"
        uses: actions/cache@v3
        id: cartopy-cache
        env:
          # Increment the build number to force a cache refresh.
          CACHE_BUILD: 0
        with:
          path: ~/.local/share/cartopy
          key: ${{ runner.os }}-cartopy-${{ env.ENV_NAME }}-p${{ env.CACHE_PERIOD }}-b${{ env.CACHE_BUILD }}

      - name: "cartopy cache populate"
        if: steps.cartopy-cache.outputs.cache-hit != 'true'
        env:
          CARTOPY_SHARE_DIR: ~/.local/share/cartopy
          CARTOPY_FEATURE: https://raw.githubusercontent.com/SciTools/cartopy/v0.20.0/tools/cartopy_feature_download.py
        run: |
          wget --quiet ${CARTOPY_FEATURE}
          mkdir -p ${CARTOPY_SHARE_DIR}
          # Requires a pre-installed version of cartopy within the environment.
          python cartopy_feature_download.py physical --output ${CARTOPY_SHARE_DIR} --no-warn

      - name: "nox cache"
        uses: ./.github/workflows/composite/nox-cache
        with:
          # Increment the build number to force a cache refresh.
          cache_build: 0

      - name: "iris configure"
        env:
          SITE_CFG: lib/iris/etc/site.cfg
          MPL_RC: ${HOME}/.config/matplotlib/matplotlibrc
        run: |
          mkdir -p $(dirname ${SITE_CFG})
          echo ${SITE_CFG}
          echo "[Resources]" >> ${SITE_CFG}
          echo "test_data_dir = ${HOME}/iris-test-data/test_data" >> ${SITE_CFG}
          echo "doc_dir = ${GITHUB_WORKSPACE}/docs" >> ${SITE_CFG}
          cat ${SITE_CFG}
          mkdir -p $(dirname ${MPL_RC})
          echo ${MPL_RC}
          echo "backend : agg" >> ${MPL_RC}
          echo "image.cmap : viridis" >> ${MPL_RC} 
          cat ${MPL_RC}

      - name: "iris doctests and gallery"
        env:
          PY_VER: ${{ matrix.python-version }}
        run: |
          nox --session doctest -- --verbose
